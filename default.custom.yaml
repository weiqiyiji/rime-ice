patch:
  schema_list:
    - schema: double_pinyin_mspy
    - schema: double_pinyin
    - schema: double_pinyin_flypy
    - schema: rime_ice

  menu/page_size: 7

  key_binder:
    bindings:
      # Tab/Shift+Tab 切换光标至下/上一个拼音
      - { when: composing, accept: Shift+Tab, send: Shift+Left }
      - { when: composing, accept: Tab, send: Shift+Right }
      # Tab/Shift+Tab 翻页
      # - { when: has_menu, accept: Shift+Tab, send: Page_Up }
      # - { when: has_menu, accept: Tab, send: Page_Down }

      # 翻页 - =
      - { when: has_menu, accept: minus, send: Page_Up }
      - { when: has_menu, accept: equal, send: Page_Down }

      # 翻页 , .
      # 需要额外注释掉方案中 recognizer/patterns 下的 url_2 选项（这个会覆盖掉句号的行为）
      # - { when: paging, accept: comma, send: Page_Up }
      # - { when: has_menu, accept: period, send: Page_Down }

      # 翻页 [ ]
      # - { when: paging, accept: bracketleft, send: Page_Up }
      # - { when: has_menu, accept: bracketright, send: Page_Down }

      # numbered_mode_switch:
      # - { when: always, accept: Control+Shift+1, select: .next }               # 在最近的两个方案之间切换
      # - { when: always, accept: Control+Shift+2, toggle: ascii_mode }          # 切换中英
      # - { when: always, accept: Control+Shift+3, toggle: ascii_punct }           # 切换中英标点
      # - { when: always, accept: "Control+Shift+4", toggle: traditionalization }  # 切换简繁
      # - { when: always, accept: Control+Shift+5, toggle: full_shape }          # 切换全半角

      # emacs_editing:
      # - { when: composing, accept: Control+p, send: Up }
      # - { when: composing, accept: Control+n, send: Down }
      # - { when: composing, accept: Control+b, send: Left }
      # - { when: composing, accept: Control+f, send: Right }
      # - { when: composing, accept: Control+a, send: Home }
      # - { when: composing, accept: Control+e, send: End }
      # - { when: composing, accept: Control+d, send: Delete }
      # - { when: composing, accept: Control+k, send: Shift+Delete }
      # - { when: composing, accept: Control+h, send: BackSpace }
      # - { when: composing, accept: Control+g, send: Escape }
      # - { when: composing, accept: Control+bracketleft, send: Escape }
      # - { when: composing, accept: Control+y, send: Page_Up }
      # - { when: composing, accept: Alt+v, send: Page_Up }
      # - { when: composing, accept: Control+v, send: Page_Down }

      # optimized_mode_switch:
      # - { when: always, accept: Control+Shift+space, select: .next }
      - { when: always, accept: Shift+space, toggle: ascii_mode }
      # - { when: always, accept: Control+comma, toggle: full_shape }
      # - { when: always, accept: Control+period, toggle: ascii_punct }
      # - { when: always, accept: Control+slash, toggle: traditionalization }